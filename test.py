from tkinter import *
from tkinter import ttk

root = Tk()
root.title("инф")
root.geometry("600x400")
tree = ttk.Treeview(root)
tree.heading("#0", text="Отделы", anchor=W)
tree.pack(expand=1, fill=BOTH)

def expand_section(event):
    if tree.item(tree.focus())["text"] == "§ 1.1. Системы счисления 1 Вариант":
        tree.item(section_1_1_1, open=True)
        tree.item(section_1_1_2, open=True)
        tree.item(section_1_1_3, open=True)
        tree.item(section_1_1_4, open=True)
        tree.item(section_1_1_5, open=True)
        tree.item(section_1_1_6, open=True)
        tree.item(section_1_1_7, open=True)
        tree.item(section_1_1_8, open=True)
        tree.item(section_1_1_9, open=True)
        tree.item(section_1_1_10, open=True)
        tree.item(section_1_1_11, open=True)
        tree.item(section_1_1_12, open=True)
        tree.item(section_1_1_13, open=True)
    elif tree.item(tree.focus())["text"] == "§ 1.1. Системы счисления 2 Вариант":
        tree.item(section_1_2_1, open=True)
        tree.item(section_1_2_2, open=True)
        tree.item(section_1_2_3, open=True)
        tree.item(section_1_2_4, open=True)
        tree.item(section_1_2_5, open=True)
        tree.item(section_1_2_6, open=True)
        tree.item(section_1_2_7, open=True)
        tree.item(section_1_2_8, open=True)
        tree.item(section_1_2_9, open=True)
        tree.item(section_1_2_10, open=True)
        tree.item(section_1_2_11, open=True)
        tree.item(section_1_2_12, open=True)
        tree.item(section_1_2_13, open=True)
    elif tree.item(tree.focus())["text"] == "§ 1.2. Представление чисел в компьютере 2 Вариант":
        tree.item(section_2_2_1, open=True)
        tree.item(section_2_2_2, open=True)
        tree.item(section_2_2_3, open=True)
        tree.item(section_2_2_4, open=True)
        tree.item(section_2_2_5, open=True)
        tree.item(section_2_2_6, open=True)
        tree.item(section_2_2_7, open=True)

tree.bind("<Double-1>", expand_section)

tree.insert("", END, iid=1, text="1 Глава")
section_1_1 = tree.insert(1, index=END, text="§ 1.1. Системы счисления 1 Вариант", values=[""])
section_1_1_1 = tree.insert(section_1_1, index=END, text="1) Сколько единиц в сумме 101112 и 102? Решение: 101112 + 102 = 110012 Ответ: 3")
section_1_1_2 = tree.insert(section_1_1, index=END, text="2) Сколько 1 в двоичной Решение: 1510 = 11112 Ответ: 4")
section_1_1_3 = tree.insert(section_1_1, index=END, text="3) Запишите двоичное число, Ответ: 101101")
section_1_1_4 = tree.insert(section_1_1, index=END, text="4) В алфавите шестнадцатеричной системы Ответ: больше знаков")
section_1_1_5 = tree.insert(section_1_1, index=END, text="5) 1008 = 6410, 1010102 > 408, 108 < 1016")
section_1_1_6 = tree.insert(section_1_1, index=END, text="6) Число 11012 в десятичной системе Ответ: 13")
section_1_1_7 = tree.insert(section_1_1, index=END, text="7) Система счисления, в которой количественный эквивалент Ответ:непозиционной")
section_1_1_8 = tree.insert(section_1_1, index=END, text="8) Как называется совокупность всех знаков, Ответ: Алфавит")
section_1_1_9 = tree.insert(section_1_1, index=END, text="9) Число 6510 в двоичной системе Ответ: 1000001")
section_1_1_10 = tree.insert(section_1_1, index=END, text="10) Число 51310 в восьмеричной системе  Ответ: 1001")
section_1_1_11 = tree.insert(section_1_1, index=END, text="11) Наибольшим из чисел 11112, 218, 1910, 1816 ,   Ответ: 1816")
section_1_1_12 = tree.insert(section_1_1, index=END, text="12) Найдите верное равенство: ,Ответ: 178 = 11112")
section_1_1_13 = tree.insert(section_1_1, index=END, text="13) Система счисления, в которой 85 + 81 = 106 ,Ответ: шестнадцатеричная")


section_1_2 = tree.insert(1, index=END, text="§ 1.1. Системы счисления 2 Вариант", values=[""])
section_1_2_1 = tree.insert(section_1_2, index=END, text="1) Число 12710 в двоичной системе ,Ответ: 1111111")
section_1_2_2 = tree.insert(section_1_2, index=END, text="2) Запишите двоичное число, соответствующее ,Ответ: 20501")
section_1_2_3 = tree.insert(section_1_2, index=END, text="3) Наибольшим из чисел 101112, 418, 2910, 1С16 ,Ответ: 418")
section_1_2_4 = tree.insert(section_1_2, index=END, 
                            text="4) Сравните величины, указав для каждой , 1002 > 112 ,12 = 110 ,1010102 < 1100002")
section_1_2_5 = tree.insert(section_1_2, index=END, 
                            text="5) Отличием алфавита восьмеричной системы от алфавита десятичной, Ответ: количество используемых цифр")
section_1_2_6 = tree.insert(section_1_2, index=END, text="6) Сколько нулей в числе 101112 и 100102?, Ответ: 3")
section_1_2_7 = tree.insert(section_1_2, index=END, text="7) Система счисления, в которой 15 + 13 = 30 ,Ответ: восьмеричная")
section_1_2_8 = tree.insert(section_1_2, index=END, text="8) Сколько 0 в двоичной записи десятичного числа 16, Ответ: 4")
section_1_2_9 = tree.insert(section_1_2, index=END, text="9) Число 110012/sub> в десятичной системе ,Ответ: 25")
section_1_2_10 = tree.insert(section_1_2, index=END, text="10) Найдите верное равенство: ,Ответ: 438 = 2316")
section_1_2_11 = tree.insert(section_1_2, index=END, text="11) Система счисления, в которой количественный эквивалент цифры ,Ответ: позиционной ")
section_1_2_12 = tree.insert(section_1_2, index=END, text="12)Как называются знаки, используемые в системе ,Ответ: Цифры")
section_1_2_13 = tree.insert(section_1_2, index=END, text="13)Число 52010 в восьмеричной системе ,Ответ: 1010")



section_2_2 = tree.insert(1, index=END, text="§ 1.2. Представление чисел в компьютере 1 Вариант", values=[])
section_2_1_1  = tree.insert(section_2_2, index=END, text="1) Числом в нормальной форме с нормализованной ,Ответ: 0,341x109")
section_2_1_2  = tree.insert(section_2_2, index=END, text="2) При записи числа в форме A= ±m ,Ответ: мантисса")
section_2_1_3  = tree.insert(section_2_2, index=END, text="3) Если число положительное, то в знаковый разряд помещается, Ответ: 0")
section_2_1_4  = tree.insert(section_2_2, index=END, text="4)  Укажите десятичный эквивалент числа, Ответ: 76")
section_2_1_5  = tree.insert(section_2_2, index=END, text="5) Какие из чисел можно сохранить в 8-разрядном беззнаково, Ответ: 76")
section_2_1_6  = tree.insert(section_2_2, index=END, text="6) Укажите число, записанное в естественной форме, Ответ: 0,01357")
section_2_1_7  = tree.insert(section_2_2, index=END, text="7) Беззнаковым 8-разрядным представлением числа 6310, Ответ: 00111111")


section_2_3 = tree.insert(1, index=END, text="§ 1.2. Представление чисел в компьютере 2 Вариант", values=[])
section_2_2_1  = tree.insert(section_2_3, index=END, text="1) Беззнаковым 8-разрядным представлением числа 4510, Ответ: 00101101")
section_2_2_2  = tree.insert(section_2_3, index=END, text="2) Если число отрицательное, то в знаковый разряд помещается, Ответ: 1")
section_2_2_3  = tree.insert(section_2_3, index=END, text="3) При записи числа в форме A= ±m x qp, где q – это, Ответ: основание системы счисления")
section_2_2_4  = tree.insert(section_2_3, index=END, text="4) Числом в нормальной форме с нормализованной мантиссой, Ответ: 0,401 x 107")
section_2_2_5  = tree.insert(section_2_3, index=END, text="5) акие из чисел можно сохранить в 8-разрядном беззнаковом, ✔1111102 ✔1A16 ")
section_2_2_6  = tree.insert(section_2_3, index=END, text="6) Укажите десятичный эквивалент числа, прямой код которого 00010101, Ответ: 21")
section_2_2_7  = tree.insert(section_2_3, index=END, text="7) Укажите число, записанное в естественной форме, Ответ: 2010,0102")


section_3_3 = tree.insert(1, index=END, text="§ 1.3. Элементы теории множеств и комбинаторики 1 Вариант", values=[])
section_3_3_1 = tree.insert(section_3_3, index=END, text="1)  В одном множестве 40 элементов, в другом – 30, Ответ: 70")
section_3_3_2 = tree.insert(section_3_3, index=END, text="2) Сколько разных пятибуквенных слов можно составить, Ответ: 32")
section_3_3_3 = tree.insert(section_3_3, index=END, text="3) Даны множества А и В. Множество, состоящее из их общих элементов,  ")
section_3_3_4 = tree.insert(section_3_3, index=END, text="4) На рисунке изображены отрезки AB и CD, Ответ: Ø")
section_3_3_5 = tree.insert(section_3_3, index=END, text="5) Укажите дополнение отрезка BC до BD, Ответ: CD")
section_3_3_6 = tree.insert(section_3_3, index=END, text="6) Пересечением множеств А и В обозначается: ,ответ АnB")
section_3_3_7 = tree.insert(section_3_3, index=END, text="7) Пусть множество А является подмножеством множества В, Ответ AcB")
section_3_3_8 = tree.insert(section_1_2, index=END, text="8) Имеется неограниченно много бусин пяти разных цветов, Решение: 53 = 125")
section_3_3_9 = tree.insert(section_1_2, index=END, text="9) Укажите наименьшее k для которого в двухбуквенном алфавите, Ответ: 6")

section_3_4 = tree.insert(1, index=END, text="§ 1.3. Элементы теории множеств и комбинаторики 2 Вариант", values=[])
section_3_4_1 = tree.insert(section_3_4, index=END, text="1) На рисунке изображено несколько отрезков. Укажите дополнение отрезка CD до BD:, Ответ: BC")
section_3_4_2 = tree.insert(section_3_4, index=END, text="2) В одном множестве 40 элементов, в другом – 30, Ответ: 30")
section_3_4_3 = tree.insert(section_3_4, index=END, text="3) колько разных двухбуквенных слов можно составить, Ответ: 25")
section_3_4_4 = tree.insert(section_3_4, index=END, text="4) Принадлежность элемента а множеству А обозначается: ,aEА")
section_3_4_5 = tree.insert(section_3_4, index=END, text="5) Имеется неограниченно много бусин трех разных цветов, Ответ: 243")
section_3_4_6 = tree.insert(section_3_4, index=END, text="6) Объединение множеств А и В обозначается: ,AuB")
section_3_4_7 = tree.insert(section_3_4, index=END, text="7) На рисунке изображены отрезки AB и AC ,Ответ: AC")
section_3_4_8 = tree.insert(section_3_4, index=END, text="8) Даны множества А и В. Множество, состоящее из всех элементов, Ответ: объединением множеств А и В")
section_3_4_9 = tree.insert(section_3_4, index=END, text="9)  Укажите наименьшее k для которого в двухбуквенном, Ответ: 7")

section_4_4 = tree.insert(1, index=END, text="§ 1.4. Элементы алгебры логики 1 Вариант", values=[])
section_4_4_1 = tree.insert(section_4_4, index=END, text="1) Для какого из приведённых имён истинно высказывание: ,Ответ: Марина")
section_4_4_2 = tree.insert(section_4_4, index=END, text="2) Предложение на любом языке, содержание которого можно однозначн, Ответ: высказыванием")
section_4_4_3 = tree.insert(section_4_4, index=END, text="3) Какому логическому выражению соответствует высказывание: ответ А∧B")
section_4_4_4 = tree.insert(section_4_4, index=END, text="4) Какому логическому выражению соответствует следующая таблица ,А∧B")
section_4_4_5 = tree.insert(section_4_4, index=END, text="5) Знаком ∧ в логике обозначается следующая операция: конъюнкция")
section_4_4_6 = tree.insert(section_4_4, index=END, text="6) Найдите значение выражения: ,Ответ: 1")
section_4_4_7 = tree.insert(section_4_4, index=END, text="7) Укажите отрицания высказывания ,✔ «Неверно, что для каждого из нас учить второй иностранный язык легче, чем первый»")
section_4_4_8 = tree.insert(section_4_4, index=END, text="8) Укажите предложение, не являющееся высказыванием: ,Ответ: Не можете ли вы передать соль?")
section_4_4_9 = tree.insert(section_4_4, index=END, text="9)  Для каких из чисел ложно высказывание: ,✔50 ✔123 ✔8")

section_4_5 = tree.insert(1, index=END, text="§ 1.4. Элементы алгебры логики 2 Вариант", values=[]) 
section_4_5_1 = tree.insert(section_4_5, index=END, text="1) Высказывание – это предложение на любом языке, Ответ: истинное или ложное")
section_4_5_2 = tree.insert(section_4_5, index=END, text="2) Знаком ∨ в логике обозначается следующая операция: ,Ответ: дизъюнкция")
section_4_5_3 = tree.insert(section_4_5, index=END, text="3) Для каких из чисел истинно высказывание:, ✔50 ✔8 ✔9")
section_4_5_4 = tree.insert(section_4_5, index=END, text="4) Какому логическому выражению соответствует следующая таблица, ответ:A∧B")
section_4_5_5 = tree.insert(section_4_5, index=END, text="5) Укажите отрицания высказывания ,✔«Не все школьники предпочитают изучать китайский язык»")
section_4_5_6 = tree.insert(section_4_5, index=END, text="6) Укажите предложение, не являющееся высказыванием: ,Ответ: Обязательно стань отличником")
section_4_5_7 = tree.insert(section_4_5, index=END, text="7) Найдите значение выражения: ,Ответ: 1")
section_4_5_8 = tree.insert(section_4_5, index=END, text="8) акому логическому выражению соответствует высказывание , Ответ:A∧B")
section_4_5_9 = tree.insert(section_4_5, index=END, text="9)  Для какого из приведённых имён ложно высказывание: ,Ответ: Егор")

tree.insert("", END, iid=2, text="2 Глава")
section_4_6= tree.insert(2, index=END, text="§ 2.1. Алгоритмы и исполнители 1 Вариант", values=[])
section_4_6_1 = tree.insert(section_4_6, index=END, text="1)Укажите примеры неформальных исполнителей в предложенных ситуациях, ✔Ученик VIII класса решает задачи по алгебре.")
section_4_6_2 = tree.insert(section_4_6, index=END, text="2)Как называется свойство алгоритма, означающее, Ответ: Массовость")
section_4_6_3 = tree.insert(section_4_6, index=END, text="3)Исполнитель Черепаха выполняет следующий алгоритм, Ответ: Правильный шестиугольник")
section_4_6_4 = tree.insert(section_4_6, index=END, text="4)Область, обстановка, условия, в которых действует исполнитель, Ответ: средой исполнителя")
section_4_6_5 = tree.insert(section_4_6, index=END, text="5)Понятное и точное предписание исполнителю выполнить конечную последовательность команд, Ответ: алгоритмом")
section_4_6_6 = tree.insert(section_4_6, index=END, text="6)Алгоритмом можно считать, Ответ: описание процесса решения квадратного уравнения")
section_4_6_7 = tree.insert(section_4_6, index=END, text="7)Некоторый объект, способный выполнять набор команд, Ответ: исполнителем")
section_4_6_8 = tree.insert(section_4_6, index=END, text="8)Как называется свойство алгоритма, означающее, что он задан с помощью ,Ответ: Понятность")
section_4_6_9 = tree.insert(section_4_6, index=END, text="9)Исполнитель Вычислитель работает с числами, записанными на доске. Он может, Ответ: Определенность")
section_4_6_10 = tree.insert(section_4_6, index=END, text="10)Система команд исполнителя Вычислитель состоит из двух команд, Ответ: 11121")

section_4_7 = tree.insert(2, index=END, text="§ 2.1. Алгоритмы и исполнители 2 Вариант", values=[])
section_4_7_1 = tree.insert(section_4_7, index=END, text="1)Как называется конечная последовательность шагов в решении задачи, Ответ: алгоритмом")
section_4_7_2 = tree.insert(section_4_7, index=END, text="2)Как называется свойство алгоритма, означающее, Ответ: Результативность")
section_4_7_3 = tree.insert(section_4_7, index=END, text="3)Система команд исполнителя Вычислитель состоит из двух команд, Ответ: 11112")
section_4_7_4 = tree.insert(section_4_7, index=END, text="4)Алгоритмом можно считать, Ответ: описание процесса посадки дерева")
section_4_7_5 = tree.insert(section_4_7, index=END, text="5)Как называется свойство алгоритма, означающее, Ответ: Дискретность")
section_4_7_6 = tree.insert(section_4_7, index=END, text="6)Укажите примеры формальных исполнителей ситуациях, ✔Компьютер выполняет программу проверки правописания.")
section_4_7_7 = tree.insert(section_4_7, index=END, text="7)Человек находится в лабиринте и начинает двигаться в направлении, Ответ: Результативность")
section_4_7_8 = tree.insert(section_4_7, index=END, text="8)Круг решаемых задач, среда, система команд, Ответ: формального исполнителя")
section_4_7_9 = tree.insert(section_4_7, index=END, text="9)Совокупность всех команд, которые могут быть выполнены, Ответ: системой команд исполнителя")
section_4_7_10 = tree.insert(section_4_7, index=END, text="10)Исполнитель Черепаха выполняет следующий алгоритм, Ответ: квадрат")
                             
section_4_8 = tree.insert(2, index=END, text="§ 2.2. Способы записи алгоритмов 1 Вариант", values=[])
section_4_8_1 = tree.insert(section_4_8, index=END, text="1)Укажите способ записи следующего алгоритма, Ответ: Блок-схема")
section_4_8_2 = tree.insert(section_4_8, index=END, text="2)Условным обозначением блока начала и конца в блок-схеме является ,Ответ: овал")
section_4_8_3 = tree.insert(section_4_8, index=END, text="3)y = 6*d − (x + 22). 1), Ввести значения x и d ,2)Сложить x и 22 ,3)Умножить d на 6 ,4)Вычесть из 6*d сумму (x + 22) ,5)Вывести y как результат вычисления выражения.")
section_4_8_4 = tree.insert(section_4_8, index=END, text="4)Запись алгоритма в виде набора высказываний на обычном разговорном языке называется, Ответ: словесным описанием")
section_4_8_5 = tree.insert(section_4_8, index=END, text="5)Укажите способ записи следующего алгоритма, Ответ: Построчная запись")
section_4_8_6 = tree.insert(section_4_8, index=END, text="6)Наибольшей наглядностью обладают формы записи алгоритмов, Ответ: графические")


section_4_9 = tree.insert(2, index=END, text="§ 2.2. Способы записи алгоритмов 2 Вариант", values=[])
section_4_9_1 = tree.insert( section_4_9, index=END, text=" 1)Укажите способ записи следующего алгоритма, Ответ: Словесное описание")
section_4_9_2 = tree.insert( section_4_9, index=END, text=" 2)Укажите способ записи следующего алгоритма, Ответ: псевдокод")
section_4_9_3 = tree.insert( section_4_9, index=END, text=" 3)Условным обозначением блока обработки данных в блок-схеме является, Ответ: прямоугольник")
section_4_9_4 = tree.insert( section_4_9, index=END, text=" 4)Запись на естественном языке, когда каждое предписание ,Ответ: построчной записью")
section_4_9_5 = tree.insert( section_4_9, index=END, text=" 5)y=(x+2)+(b−3) ,1) Ввести значения x и b ,2) Сложить x и 2 ,3) Вычесть из b 3 ,4) Сложить (x+2) и (b−3) ,5) Вывести y как результат вычисления выражения")
section_4_9_6 = tree.insert( section_4_9, index=END, text=" 6)Дополнительных знаний не требуют формы записи алгоритмов, Ответ:cловесные")

section_5_1 = tree.insert(2, index=END, text="§ 2.3. Объекты алгоритмов 1 Вариант", values=[])
section_5_1_1 = tree.insert( section_5_1, index=END, text=" 1)Установите соответствие, Символьная величина - ’12,67’ ,Вещественное число - 13.45  ,Логическая величина - FALSE ,Целое число - 800")
section_5_1_2 = tree.insert( section_5_1, index=END, text=" 2)Укажите величины, которые целесообразно ,✔рост учеников класса ,✔список учеников класса ,✔оценки учеников класса за контрольную работу по информатике")
section_5_1_3 = tree.insert( section_5_1, index=END, text=" 3)Укажите логические операции: Ответ:✔ИЛИ ,✔И ,✔НЕ")
section_5_1_4 = tree.insert( section_5_1, index=END, text=" 4)Укажите постоянные величины:✔ускорение свободного падения ,✔количество дней в неделе ,✔количество дней в первой декаде месяца")
section_5_1_5 = tree.insert( section_5_1, index=END, text=" 5)Укажите верный вариант записи на алгоритмическом языке операции присваивания для переменной c ,Ответ: с := 8")
section_5_1_6 = tree.insert( section_5_1, index=END, text=" 6)Укажите числовые величины вещественного типа:✔вес человека ,✔площадь фигуры")
section_5_1_7 = tree.insert( section_5_1, index=END, text=" 7)В информатике всякий отдельный информационный объект, Ответ: величиной")
section_5_1_8 = tree.insert( section_5_1, index=END, text=" 8)Величина, значение которой может изменяться в процессе исполнения алгоритма, Ответ: переменной")


section_5_2 = tree.insert(2, index=END, text="§ 2.3. Объекты алгоритмов 2 Вариант", values=[])
section_5_2_1 = tree.insert( section_5_2, index=END, text=" 1)Укажите числовые величины целого типа:✔количество мест в самолёте ,✔год создания ENIAC")
section_5_2_2 = tree.insert( section_5_2, index=END, text=" 2)Величины характеризуются:✔именем ,✔значением ,✔типом")
section_5_2_3 = tree.insert( section_5_2, index=END, text=" 3)Укажите переменные величины:✔пульс человека ,✔количество дней в месяце ,✔скорость автомобиля")
section_5_2_4 = tree.insert( section_5_2, index=END, text=" 4)Укажите величины, которые не следует представлять с помощью таблиц:✔имя человека ,✔средний рост учеников класса ,✔оценка ученика по физике")
section_5_2_5 = tree.insert( section_5_2, index=END, text=" 5)Величина, значение которой указывается в тексте алгоритма и не меняется в процессе его исполнения ,Ответ: константой")
section_5_2_6 = tree.insert( section_5_2, index=END, text=" 6)Установите соответствие:Вещественное число - 3.14 ,Символьная величина - ‘AND’ ,Целое число - 2017 ,Логическая величина - TRUE")
section_5_2_7 = tree.insert( section_5_2, index=END, text=" 7)Укажите операции сравнения:✔= ,✔>= ,✔<=")
section_5_2_8 = tree.insert( section_5_2, index=END, text=" 8)Какую из следующих последовательностей символов можно считать командой присваивания ,Ответ: C := С + 20")



section_5_3 = tree.insert(2, index=END, text="§ 2.4. Основные алгоритмические конструкции 1 Вариант", values=[])
section_5_3_1 = tree.insert( section_5_3, index=END, text=" 1)Какую ситуацию можно рассматривать как циклическую конструкцию? ,Ответ: Работа светофора")
section_5_3_2 = tree.insert( section_5_3, index=END, text=" 2)Исполнитель Черепаха, перемещаясь на экране компьютера, оставляет след в виде линии ,Ответ: 120")
section_5_3_3 = tree.insert( section_5_3, index=END, text=" 3)Если выполнение тела цикла заканчивается, когда условие цикла становится истинным, то он называется ,Ответ: цикл с постусловием")
section_5_3_4 = tree.insert( section_5_3, index=END, text=" 4)После выполнения алгоритма Робот нарисовал узор и оказался в клетке С3 ,Ответ: B3")
section_5_3_5 = tree.insert( section_5_3, index=END, text=" 5)Перед началом выполнения алгоритма Робот находился в клетке С2 ,Ответ: C1")
section_5_3_6 = tree.insert( section_5_3, index=END, text=" 6)Укажите неполную форму ветвления:  <-действие 1<-Условие--действие 2-->")
section_5_3_7 = tree.insert( section_5_3, index=END, text=" 7)Условия, состоящие из нескольких операций сравнения, Ответ: составными")
section_5_3_8 = tree.insert( section_5_3, index=END, text=" 8)Какая блок-схема соответствует следующей ситуации: №1")
section_5_3_9 = tree.insert( section_5_3, index=END, text=" 9)Алгоритм  называется линейным ,если последовательность его команд фиксирована, при каждом исполнении программы (независимо от значений исходных данных) ")
section_5_3_10 = tree.insert(section_5_3, index=END, text="10)Какое значение будет присвоено переменной Х после выполнения оператора Х := 17 mod 4? ,Ответ: 1")
section_5_3_11= tree.insert( section_5_3, index=END, text="11)Данное графическое изображение является представлением алгоритмической конструкции ,Ответ: ветвление")
section_5_3_12= tree.insert( section_5_3, index=END, text="12)На школьном алгоритмическом языке записан алгоритм ,Ответ: разветвляющимся")
section_5_3_13= tree.insert( section_5_3, index=END, text="13)Какой цикл принято изображать следующей схемой? ,Ответ: цикл с заданным условием продолжения работы")
section_5_3_14= tree.insert( section_5_3, index=END, text="14)Цикл, тело которого выполняется фиксированное число раз, называется ,Ответ: цикл «n-раз»")
section_5_3_15= tree.insert( section_5_3, index=END, text="15)Дан алгоритм для Робота ,Ответ: Если левее Робота не встретится препятствий, то он переместится на 51 клетку влево и закрасит эти клетки")


section_5_4 = tree.insert(2, index=END, text="§ 2.4. Основные алгоритмические конструкции 2 Вариант", values=[])
section_5_4_1 = tree.insert( section_5_4, index=END, text=" 1)Если выполнение тела цикла прекращается, когда условие цикла становится ложным, то он называется ,Ответ: цикл с предусловием")
section_5_4_2 = tree.insert( section_5_4, index=END, text=" 2)Какую ситуацию можно рассматривать как циклическую конструкцию? ,Ответ: Работа светофора")
section_5_4_3 = tree.insert( section_5_4, index=END, text=" 3)Условия, состоящие из одной операции сравнения, называются ,Ответ: простыми")
section_5_4_4 = tree.insert( section_5_4, index=END, text=" 4)К какому виду алгоритмов можно отнести алгоритм, схема которого представлена? ,Ответ: цикл с параметром")
section_5_4_5 = tree.insert( section_5_4, index=END, text=" 5)На школьном алгоритмическом языке записан алгоритм: ,Ответ: линейным")
section_5_4_6 = tree.insert( section_5_4, index=END, text=" 6)Исполнитель Черепаха, перемещаясь на экране компьютера, оставляет след в виде линии ,Ответ: 60")
section_5_4_7 = tree.insert( section_5_4, index=END, text=" 7)Какая блок-схема соответствует следующей ситуации: ромб-->квадрат")
section_5_4_8 = tree.insert( section_5_4, index=END, text=" 8)Какое значение будет присвоено переменной Х после выполнения оператора Х := 19 div 5? ,Ответ: 3")
section_5_4_9 = tree.insert( section_5_4, index=END, text=" 9)После выполнения алгоритма Робот нарисовал узор и оказался в клетке B3 ,Ответ: B3")
section_5_4_10= tree.insert( section_5_4, index=END, text="10)Данное графическое изображение является представлением алгоритмической конструкции ,Ответ: следование")
section_5_4_11= tree.insert( section_5_4, index=END, text="11)После выполнения алгоритма Робот находится в клетке B3 ,Ответ: B3")
section_5_4_12= tree.insert( section_5_4, index=END, text="12)Сергей, Антон, Таня и Надя, гуляя по лесу, наткнулись на овраг, который можно перейти по шаткому мосту. Ответ: Линейный")
section_5_4_13= tree.insert( section_5_4, index=END, text="13)Какую ситуацию можно рассматривать как циклическую конструкцию? ,Ответ: Смена дня и ночи")
section_5_4_14= tree.insert( section_5_4, index=END, text="14)Какой цикл принято изображать следующей схемой? ,Ответ: цикл с заданным условием окончания работы")
section_5_4_15= tree.insert( section_5_4, index=END, text="15)Дан алгоритм для Робота ,Ответ: Если правее Робота не встретится препятствий, то он переместится на 42 клетки вправо и закрасит эти клетки.")


tree.insert("", END, iid=3, text="3 Глава")

section_5_5 = tree.insert(3, index=END, text="§ 3.1. Общие сведения о языке программирования 1 Вариант", values=[])
section_5_5_1 = tree.insert( section_5_5, index=END, text=" 1)Какие символы можно использовать при записи программы на языке Паскаль? ,✔2 ,✔F ,✔*")
section_5_5_2 = tree.insert( section_5_5, index=END, text=" 2)Как можно представить структуру программы на языке Паскаль: ✔Program ,✔Begin ,✔End")
section_5_5_3 = tree.insert( section_5_5, index=END, text=" 3)Условия, состоящие из одной операции сравнения, называются ,Ответ: простыми")
section_5_5_4 = tree.insert( section_5_5, index=END, text=" 4)Алгоритм, записанный на языке программирования, называется ,Ответ: программой")
section_5_5_5 = tree.insert( section_5_5, index=END, text=" 5)Укажите ложное высказывание ,Ответ: Имя программы может состоять из любого количества любых символов")
section_5_5_6 = tree.insert( section_5_5, index=END, text=" 6)Кто является разработчиком языка программирования Паскаль? ,Ответ: Никлаус Вирт")
section_5_5_7 = tree.insert( section_5_5, index=END, text=" 7)Какое из перечисленных слов не относится к служебным словам языка программирования ,Ответ: Print")
section_5_5_8 = tree.insert( section_5_5, index=END, text=" 8)Укажите допустимые имена в языке Паскаль: ✔_F ,✔sUmmA")
section_5_5_9 = tree.insert( section_5_5, index=END, text=" 9)Установите соответствие:Последовательность не более чем из 255 символов – String ,true и false – Boolean ,-32 768 … 32 768 – Integer")
section_5_5_10= tree.insert( section_5_5, index=END, text="10)Какие из следующих последовательностей символов можно считать операторами присваивания? :✔k:=k+1 ,✔b:=b+3")


section_5_6 = tree.insert(3, index=END, text="§ 3.1. Общие сведения о языке программирования 2 Вариант", values=[])
section_5_6_1 = tree.insert( section_5_6, index=END, text=" 1)Программой называется ,Ответ: Алгоритм, записанный на языке программирования")
section_5_6_2 = tree.insert( section_5_6, index=END, text=" 2)Язык программирования Паскаль был создан ,Ответ: в начале 1970-х гг.")
section_5_6_3 = tree.insert( section_5_6, index=END, text=" 3)Какие символы нельзя использовать при записи программы на языке Паскаль:✔ф ,✔Ж")
section_5_6_4 = tree.insert( section_5_6, index=END, text=" 4)Для работы с вещественными числами в Паскаль используется тип ,Ответ: real")
section_5_6_5 = tree.insert( section_5_6, index=END, text=" 5)Выберите строку, в которой все величины имеют тип integer ,Ответ: 22; 122; 35; -43")
section_5_6_6 = tree.insert( section_5_6, index=END, text=" 6)Имя программы записывается после слова ,Ответ: program")
section_5_6_7 = tree.insert( section_5_6, index=END, text=" 7)Какое из перечисленных слов не относится к служебным словам языка ,Ответ: Ran")
section_5_6_8 = tree.insert( section_5_6, index=END, text=" 8)Установите соответствие:Целочисленный – integer ,Вещественный – real ,Логический – boolean ,Символьный – char")
section_5_6_9 = tree.insert( section_5_6, index=END, text=" 9)Укажите ложное высказывание:✔Переменным можно присваивать имена зарезервированных языком программирования слов (begin, end, program)")
section_5_6_10= tree.insert( section_5_6, index=END, text="10)Какая запись на языке программирования соответствует словесному ,Ответ: b:=b+3")


section_5_7 = tree.insert(3, index=END, text="§ 3.2. Организация ввода и вывода данных 1 Вариант", values=[])
section_5_7_1 = tree.insert( section_5_7, index=END, text=" 1)Переменной a присвоено значение 5. Установите соответствие:Write(‘a’) – a=5 ,Write(a) – 5  ,Write(‘a=’, a) – a")
section_5_7_2 = tree.insert( section_5_7, index=END, text=" 2)Целочисленным переменным a, b, c надо присвоить соответственно значения ,Ответ: read (b, a, c)")
section_5_7_3 = tree.insert( section_5_7, index=END, text=" 3)С помощью какой команды нельзя присвоить значение переменной a? ,Ответ: С помощью команды write(a)")
section_5_7_4 = tree.insert( section_5_7, index=END, text=" 4)Дан фрагмент программы ,Ответ: 114.34")
section_5_7_5 = tree.insert( section_5_7, index=END, text=" 5)Что будет выведено на экран после выполнения следующей программы ,Ответ: s=9.0")
section_5_7_6 = tree.insert( section_5_7, index=END, text=" 6)Оператором ввода данных является ,Ответ: Read")

                            
section_5_8 = tree.insert(3, index=END, text="§ 3.2. Организация ввода и вывода данных 2 Вариант", values=[])
section_5_8_1 = tree.insert( section_5_8, index=END, text=" 1)Укажите операторы вывода данных: ✔Write ,✔Writeln")
section_5_8_2 = tree.insert( section_5_8, index=END, text=" 2)Переменной a1 присвоено значение 8. Установите соответствие:Write(‘a1=’ ,a1) – a1=8 ,Write(a1) – 8 ,Write(‘a1’) – a1")
section_5_8_3 = tree.insert( section_5_8, index=END, text=" 3)Дан фрагмент программы: x:=52; write ( 'Ответ: ', х: 2,'км/ч'); После его выполнения на экран будет выведено:✔Ответ: 52км/ч")
section_5_8_4 = tree.insert( section_5_8, index=END, text=" 4)Для ввода в оперативную память значений переменных используется оператор ,Ответ: readln")
section_5_8_5 = tree.insert( section_5_8, index=END, text=" 5)Что будет выведено на экран после выполнения следующей программы: 1.Hello, 2.World!")
section_5_8_6 = tree.insert( section_5_8, index=END, text=" 6)Целочисленным переменным a, b, c надо присвоить соответственно значения 10, 20 и 30 ,Ответ: read (c, b, a)")


section_5_9 = tree.insert(3, index=END, text="§ 3.3. Программирование линейных алгоритмов 1 Вариан", values=[])
section_5_9_1 = tree.insert( section_5_9, index=END, text=" 1)Квадратный корень из x в Паскале можно получить с помощью функции ,Ответ: sqrt(x)")
section_5_9_2 = tree.insert( section_5_9, index=END, text=" 2)Программист торопился и ошибся в записи оператора присваивания на языке Паскаль: x:=a*3+sqrt9 ,Ответ: Аргумент записан без скобок")
section_5_9_3 = tree.insert( section_5_9, index=END, text=" 3)Выражение на языке Паскаль выглядит так: sqrt(sqr(z)−4∗z+9)  ,Ответ:√z²-4z+9 ")
section_5_9_4 = tree.insert( section_5_9, index=END, text=" 4)Для генерации случайного целого числа из интервала ,Ответ: random(11)+10")
section_5_9_5 = tree.insert( section_5_9, index=END, text=" 5)Характерным признаком линейной программы является ,Ответ: выполнение операторов в порядке их записи")
section_5_9_6 = tree.insert( section_5_9, index=END, text=" 6)Установите соответствие:sqr(6) – 36 ,10 mod 3 – 1 ,abs(-8) – 8")
section_5_9_7 = tree.insert( section_5_9, index=END, text=" 7)Получить целое частное можно с помощью операции ,Ответ: div")
section_5_9_8 = tree.insert( section_5_9, index=END, text=" 8)Дано логическое выражение: (a>2) and (a<34). Оно истинно, если ,Ответ: 2<a<34")

section_6_1 = tree.insert(3, index=END, text="§ 3.3. Программирование линейных алгоритмов 2 Вариан", values=[])
section_6_1_1 = tree.insert( section_6_1, index=END, text=" 1)Получить остаток от деления можно с помощью операции ,Ответ: mod")
section_6_1_2 = tree.insert( section_6_1, index=END, text=" 2)Дано логическое выражение: (a>=2) and (a<=34). Оно ложно, если ,Ответ: a ∈ [2; 34]")
section_6_1_3 = tree.insert( section_6_1, index=END, text=" 3)Выражение на языке Паскаль выглядит так: abs(sqr(z)−5∗z+7) ,|z² -5z+7|")
section_6_1_4 = tree.insert( section_6_1, index=END, text=" 4)Для генерации случайного целого числа из интервала [-10; 10) необходимо использовать выражение ,Ответ: random(20) – 10")
section_6_1_5 = tree.insert( section_6_1, index=END, text=" 5)Программист торопился и ошибся в записи оператора присваивания на языке Паскаль: c:=4x+15 ,Ответ: Пропущен знак умножения между 4 и х")
section_6_1_6 = tree.insert( section_6_1, index=END, text=" 6)Квадрат x в Паскале можно получить с помощью функции ,Ответ: sqr (x)")
section_6_1_7 = tree.insert( section_6_1, index=END, text=" 7)Логической переменной можно присвоить результат операции ,Ответ: сравнения")
section_6_1_8 = tree.insert( section_6_1, index=END, text=" 8)Установите соответствие:13 div 3 – 4 ,abs(-8.5) – 8.5 ,sqrt(9) – 3")


section_6_2 = tree.insert(3, index=END, text="§ 3.4. Программирование разветвляющихся алгоритмов 1 Вариан", values=[])
section_6_2_1 = tree.insert( section_6_2, index=END, text=" 1)If в условном операторе переводится как ,Ответ: если")
section_6_2_2 = tree.insert( section_6_2, index=END, text=" 2)Условный оператор ,Ответ: четным")
section_6_2_3 = tree.insert( section_6_2, index=END, text=" 3)В каком из условных операторов допущена ошибка ,Ответ: if a<b then min:=a; else min:=b;")
section_6_2_4 = tree.insert( section_6_2, index=END, text=" 4)Пусть а, b, c – углы треугольника. Какое сообщение можно ,Ответ: Треугольник прямоугольный")
section_6_2_5 = tree.insert( section_6_2, index=END, text=" 5)На вход программы, фрагмент которой приведённой ниже, поданы числа 10 и 15 ,Ответ: 5 5")
section_6_2_6 = tree.insert( section_6_2, index=END, text=" 6)Дан условный оператор: if a<17 then y:=a else y:=a+3 ,Ответ: a<17")
section_6_2_7 = tree.insert( section_6_2, index=END, text=" 7)Какое из предложенных выражений может быть использовано в качестве условия? ,Ответ: (x=3) or (x=4)")
section_6_2_8 = tree.insert( section_6_2, index=END, text=" 8)Определите значение переменной с после выполнения следующего фрагмента программы ,Ответ: 20")


section_6_3 = tree.insert(3, index=END, text="§ 3.4. Программирование разветвляющихся алгоритмов 2 Вариан", values=[])
section_6_3_1 = tree.insert( section_6_3, index=END, text=" 1)Дан условный оператор: if x>2 then y:=x+7 else y:=x−20 ,Ответ: y:=x+7")
section_6_3_2 = tree.insert( section_6_3, index=END, text=" 2)Является ли условным оператором следующая последовательность символов? ,Ответ: не является")
section_6_3_3 = tree.insert( section_6_3, index=END, text=" 3)В условном операторе и после then, и после else нельзя использовать ,Ответ: несколько операторов")
section_6_3_4 = tree.insert( section_6_3, index=END, text=" 4)На вход программы, фрагмент которой приведённой ниже, поданы числа 15 и 10. Ответ: 5 15")
section_6_3_5 = tree.insert( section_6_3, index=END, text=" 5)Else в условном операторе переводится как ,Ответ: иначе")
section_6_3_6 = tree.insert( section_6_3, index=END, text=" 6)Условный оператор ,Ответ: нечетным")
section_6_3_7 = tree.insert( section_6_3, index=END, text=" 7)Какое из предложенных выражений может быть использовано в качестве условия? ,Ответ: (z>8) and (z<19)")
section_6_3_8 = tree.insert( section_6_3, index=END, text=" 8)Пусть а, b, c – стороны треугольника. Ответ: Треугольник равносторонний")


section_6_4 = tree.insert(3, index=END, text="§ 3.5. Программирование циклических алгоритмов 1 Вариан", values=[])
section_6_4_1 = tree.insert( section_6_4, index=END, text=" 1)Какой оператор цикла желательно использовать, если известно условие выполнения тела цикла?>Ответ: while <условие> do <оператор>")
section_6_4_2 = tree.insert( section_6_4, index=END, text=" 2)Какого оператора цикла не существует в языке Паскаль? ,Ответ: loop")
section_6_4_3 = tree.insert( section_6_4, index=END, text=" 3)Цикл в фрагменте программы ,Ответ: 2 раза")
section_6_4_4 = tree.insert( section_6_4, index=END, text=" 4)Используется оператор for i:= 5 to 36 do… ,Ответ: 5")
section_6_4_5 = tree.insert( section_6_4, index=END, text=" 5)Используется оператор for i:= 1 to 30 ,Ответ: 31 зачтёт как верный вариант в тесте, но на деле верным ответом должен быть 30")
section_6_4_6 = tree.insert( section_6_4, index=END, text=" 6)Определите, какое значение будет выведено на экран в результате выполнения приведенной ниже последовательности операторов: ,Ответ: 12")
section_6_4_7 = tree.insert( section_6_4, index=END, text=" 7)Какой оператор цикла желательно использовать для записи алгоритмической конструкции, Ответ: repeat <оператор1, …> until <условие>")
section_6_4_8 = tree.insert( section_6_4, index=END, text=" 8)Укажите, сколько раз будет выполнен цикл for i :=-1 to 2 do a:=a+1 ,Ответ: 4")
section_6_4_9 = tree.insert( section_6_4, index=END, text=" 9)Чему равно значение переменной s после выполнения следующего фрагмента программы ,Ответ: 6")

section_6_5 = tree.insert(3, index=END, text="§ 3.5. Программирование циклических алгоритмов 2 Вариан", values=[])
section_6_5_1 = tree.insert( section_6_5, index=END, text=" 1)Какой оператор цикла желательно использовать, если известно число повторений тела цикла? ,Ответ: for <параметр>:= <начальное значение>to<конечное значение> do<оператор>")
section_6_5_2 = tree.insert( section_6_5, index=END, text=" 2)Какой оператор цикла желательно использовать, если известно условие выхода из цикла? ,Ответ: repeat <оператор1, …> until <условие>")
section_6_5_3 = tree.insert( section_6_5, index=END, text=" 3)Цикл в фрагменте программы ,Ответ: бесконечное число раз")
section_6_5_4 = tree.insert( section_6_5, index=END, text=" 4)Чему равно значение переменной s после выполнения следующего фрагмента программы ,6 15 0 5  ,Ответ: 15")
section_6_5_5 = tree.insert( section_6_5, index=END, text=" 5)Используется оператор for i:= -5 to 9 do ,Ответ: -5")
section_6_5_6 = tree.insert( section_6_5, index=END, text=" 6)Определите, какое значение будет выведено на экран в результате выполнения приведенной ниже последовательности операторов: Ответ: 64")
section_6_5_7 = tree.insert( section_6_5, index=END, text=" 7)Какой оператор цикла желательно использовать для записи алгоритмической конструкции, Ответ: while <условие> do <оператор>")
section_6_5_8 = tree.insert( section_6_5, index=END, text=" 8)Используется оператор for i:= -10 to 10 do… ,Ответ: ответ будет 11, но ответ должен быть 10.")



root.mainloop()
